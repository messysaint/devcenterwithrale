/*
 * tomcatManager.java
 *
 * Created on March 2, 2003, 4:46 AM
 */

/**
 *
 * @author  test1
 */
public class tomcatManager extends javax.swing.JDialog {
    
    /** Creates new form tomcatManager */
    public tomcatManager(mainForm parent, boolean modal) {
        super(parent, modal);
        initComponents();
        myParent = parent;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        listButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageEditorPane = new javax.swing.JEditorPane();
        jPanel6 = new javax.swing.JPanel();
        appNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        deployButton = new javax.swing.JButton();
        undeployButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setTitle("Manage Web Applications");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        listButton.setFont(new java.awt.Font("Default", 0, 11));
        listButton.setText("List web applications");
        listButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(listButton, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(450, 200));
        messageEditorPane.setEditable(false);
        messageEditorPane.setFont(new java.awt.Font("Default", 0, 11));
        jScrollPane1.setViewportView(messageEditorPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.EtchedBorder(), "Actions"));
        jPanel6.setPreferredSize(new java.awt.Dimension(300, 96));
        appNameTextField.setFont(new java.awt.Font("Default", 0, 11));
        appNameTextField.setMinimumSize(new java.awt.Dimension(150, 19));
        appNameTextField.setPreferredSize(new java.awt.Dimension(150, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel6.add(appNameTextField, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Default", 0, 11));
        jLabel1.setText("App Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jLabel1, gridBagConstraints);

        deployButton.setFont(new java.awt.Font("Default", 0, 11));
        deployButton.setText("Deploy");
        deployButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deployButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 5);
        jPanel6.add(deployButton, gridBagConstraints);

        undeployButton.setFont(new java.awt.Font("Default", 0, 11));
        undeployButton.setText("UnDeploy");
        undeployButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undeployButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 5);
        jPanel6.add(undeployButton, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Default", 0, 11));
        jLabel11.setText(".war");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 5, 5);
        jPanel6.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jPanel6, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        closeButton.setFont(new java.awt.Font("Default", 0, 11));
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jPanel3.add(closeButton);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel4, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel5, java.awt.BorderLayout.WEST);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(523, 440));
        setLocation((screenSize.width-523)/2,(screenSize.height-440)/2);
    }//GEN-END:initComponents
    
    private void undeployButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undeployButtonActionPerformed
        // Add your handling code here:
        // Add your handling code here:
        String warFile = appNameTextField.getText().trim();
        String httpMessage = new String();
        char nextLine = '|';
        
        if( warFile.equalsIgnoreCase( "manager" ) ) {
            messageEditorPane.setText( "Not allowed to undeploy this archive" );
        } else {
            if( isValidName( warFile ) ) {
                
                httpMessage = myParent.remoteOtherCommand( "list", "list-all-apps" );
                
                if( isExisting( warFile, httpMessage ) ) {
                    myParent.printMessage( "Undeploying web application" );
                    appOtherManager aom = new appOtherManager( myParent, this, false, "remove", warFile );
                    aom.show();
                } else {
                    messageEditorPane.setText( "Archive name does not exist" );
                }
            } else {
                messageEditorPane.setText( "Archive name is not valid" );
            }
        }
    }//GEN-LAST:event_undeployButtonActionPerformed
    
    private void deployButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deployButtonActionPerformed
        // Add your handling code here:
        String warFile = appNameTextField.getText().trim();
        String httpMessage = new String();
        char nextLine = '|';
        
        if( warFile.equalsIgnoreCase( "manager" ) ) {
            messageEditorPane.setText( "Not allowed to deploy this archive" );
        } else {
            if( isValidName( warFile ) ) {
                
                httpMessage = myParent.remoteOtherCommand( "list", "list-all-apps" );
                
                if( !isExisting( warFile, httpMessage ) ) {
                    myParent.printMessage( "Deploying web application" );
                    appOtherManager aom = new appOtherManager( myParent, this, false, "dummy", warFile );
                    aom.show();
                } else {
                    messageEditorPane.setText( "Archive name is already existing" );
                }
            } else {
                messageEditorPane.setText( "Archive name is not valid" );
            }
        }
    }//GEN-LAST:event_deployButtonActionPerformed
    
    private void listButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listButtonActionPerformed
        // Add your handling code here:
        String httpMessage = new String();
        char nextLine = '|';
        
        myParent.printMessage( "Listing web applications" );
        appOtherManager aom = new appOtherManager( myParent, this, false, "list", "list-all-command" );
        aom.show();
    }//GEN-LAST:event_listButtonActionPerformed
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // Add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //new tomcatManager(new javax.swing.JFrame(), true).show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField appNameTextField;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    public static javax.swing.JEditorPane messageEditorPane;
    private javax.swing.JButton deployButton;
    private javax.swing.JButton listButton;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JButton undeployButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton closeButton;
    // End of variables declaration//GEN-END:variables
    
    mainForm myParent; // mainForm parent
    
    public boolean isValidName( String name ) {
        
        boolean valid = true;
        char[] specialChars = {' ','~', '`','!','@','#','$','%','^','&','*','(',')','_','-','+','=','{','[','}',']','|','\\',':',';','\"','\'','<',',','>','.','?','/'};
        
        for( int i = 0 ; i < specialChars.length ; i++ ) {
            if( name.indexOf( specialChars[i] ) != -1 ) {
                valid = false;
                break;
            }
        }
        
        if( valid == true ) {
            if( name.trim().length() == 0 ) {
                valid = false;
            }
        }
        
        return valid;
    }
    
    public boolean isExisting( String name, String list ) {
        
        boolean rvalue = false;
        
        if( list.indexOf( name) != -1 ) {
            rvalue = true;
        }
        
        return rvalue;
    }
    
}
