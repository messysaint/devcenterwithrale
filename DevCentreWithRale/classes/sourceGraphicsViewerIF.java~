/*
 * mvcController.java
 *
 * Created on December 24, 2002, 3:47 PM
 */
import javax.swing.*;
import java.io.*;
//import java.awt.*;
//import java.awt.event.*;

/**
 *
 * @author  test1
 */
public class sourceGraphicsViewerIF extends javax.swing.JInternalFrame {
    
    
    /** Creates new form mvcController */
    public sourceGraphicsViewerIF(mainForm mainSource, String selectedFile) {
        
        initComponents();
        
        try {
            UIManager.setLookAndFeel( LnF );
            SwingUtilities.updateComponentTreeUI( this );
            
        } catch (UnsupportedLookAndFeelException exc) {
            main.printMessage( exc.toString() );
        } catch (IllegalAccessException exc) {
            main.printMessage( exc.toString() );
        } catch (ClassNotFoundException exc) {
            main.printMessage( exc.toString() );
        } catch (InstantiationException exc) {
            main.printMessage( exc.toString() ); 
        }
        
        main = mainSource;
        fileSource = selectedFile;
        setTitle( getTitle() + " " + fileSource.substring( fileSource.indexOf( '.' ) ).toUpperCase() + " [ " + fileSource + " ]" );
        graphicObject.setIcon(new javax.swing.ImageIcon( selectedFile ));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        graphicObject = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("GIF/JPG File Viewer");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/favorites.gif")));
        setVisible(true);
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setLayout(new java.awt.GridLayout());

        graphicObject.setBackground(new java.awt.Color(255, 255, 255));
        graphicObject.setIcon(new javax.swing.ImageIcon("C:\\TEMP\\project2\\src\\image\\adminlogo.gif"));
        graphicObject.setBorder(new javax.swing.border.EtchedBorder());
        jPanel2.add(graphicObject);

        jScrollPane1.setViewportView(jPanel2);

        jPanel1.add(jScrollPane1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(700, 500));
        setLocation((screenSize.width-700)/2,(screenSize.height-500)/2);
    }//GEN-END:initComponents
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton graphicObject;
    // End of variables declaration//GEN-END:variables
    
    private String LnF = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";
    private mainForm main;
    private String fileSource = new String();
    private DataInputStream in;
    
    
    // inner class
    class outFile extends DataOutputStream {
        
        public outFile( String filename ) throws IOException {
            super( new BufferedOutputStream( new FileOutputStream( filename ) ) );
        }
        
        public outFile(File file) throws IOException {
            this(file.getPath());
        }
        
    }
    
    
    // inner class
    class filter extends Object implements FilenameFilter {
        
        String afn;
        
        public filter( String afn ) {
            this.afn = afn;
        }
        
        public boolean accept(File dir, String name) {
            // Strip path information:
            String f = new File(name).getName();
            return f.indexOf(afn) != -1;
        }
        
    }
        
    public String getFileSource() {
        return fileSource;        
    }
    
}
