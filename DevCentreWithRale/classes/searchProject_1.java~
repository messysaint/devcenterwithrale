/*
 * saveYesNo.java
 *
 * Created on December 28, 2002, 11:02 AM
 */
import java.util.*;
import java.awt.*;
import javax.swing.tree.*;
import java.io.*;
import org.apache.tools.ant.DirectoryScanner;

/**
 *
 * @author  test1
 */
public class searchProject extends javax.swing.JDialog {
    
    /** Creates new form saveYesNo */
    public searchProject(mainForm parent, boolean modal) {
        super(parent, modal);
        initComponents();
        main = parent;
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        selectionGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        filterComboBox = new javax.swing.JComboBox();
        goButton = new javax.swing.JButton();
        caseSensitiveCheckBox = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayResultTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        doneButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setTitle("Search Project");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        jSplitPane1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(new javax.swing.border.EtchedBorder());
        jLabel1.setFont(new java.awt.Font("Default", 0, 11));
        jLabel1.setText("Text:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jLabel1, gridBagConstraints);

        searchTextField.setFont(new java.awt.Font("Default", 0, 11));
        searchTextField.setMinimumSize(new java.awt.Dimension(300, 19));
        searchTextField.setPreferredSize(new java.awt.Dimension(300, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(searchTextField, gridBagConstraints);

        filterComboBox.setFont(new java.awt.Font("Default", 0, 11));
        filterComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All listed text files", "*.java", "*.jws", "*.jsp", "*.html", "*.htm", "*.properties", "*.txt", "*.dwt", "*.css", "*.js", "*.xml", "*.tld" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(filterComboBox, gridBagConstraints);

        goButton.setFont(new java.awt.Font("Default", 0, 11));
        goButton.setText("Go search");
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(goButton, gridBagConstraints);

        caseSensitiveCheckBox.setFont(new java.awt.Font("Default", 0, 11));
        caseSensitiveCheckBox.setText("Case-sensitive");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(caseSensitiveCheckBox, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Default", 0, 11));
        jLabel11.setText("File type:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jLabel11, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel6);

        displayResultTextArea.setFont(new java.awt.Font("Default", 0, 11));
        displayResultTextArea.setMargin(new java.awt.Insets(0, 10, 0, 0));
        jScrollPane1.setViewportView(displayResultTextArea);

        jSplitPane1.setRightComponent(jScrollPane1);

        jPanel1.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        doneButton.setFont(new java.awt.Font("Default", 0, 11));
        doneButton.setText("Close");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        jPanel3.add(doneButton);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel4, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel5, java.awt.BorderLayout.WEST);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(616, 421));
        setLocation((screenSize.width-616)/2,(screenSize.height-421)/2);
    }//GEN-END:initComponents

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        // Add your handling code here:
        String srchText = searchTextField.getText().trim();
        String filter = (String) filterComboBox.getSelectedItem();
        if( srchText.length() > 0 ) {
            scanProject( srchText, filter );
        }        
    }//GEN-LAST:event_goButtonActionPerformed
        
    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // Add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_doneButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //new saveYesNo( mainForm parent, true).show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JComboBox filterComboBox;
    private javax.swing.ButtonGroup selectionGroup;
    private javax.swing.JButton goButton;
    private javax.swing.JTextArea displayResultTextArea;
    private javax.swing.JCheckBox caseSensitiveCheckBox;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton doneButton;
    // End of variables declaration//GEN-END:variables
    
    private mainForm main;
    
    public void scanProject( String srchTxt, String filter ) {
        
        DirectoryScanner ds = new DirectoryScanner();                       
        String fileType = (String) filterComboBox.getSelectedItem();        
        String[] includes = null;
        String[] excludes = { "workarea\\" };
        int found = 0;
        
        if( fileType.toUpperCase().startsWith( "ALL" ) ) { // get all listed file types
            
            int len = filterComboBox.getModel().getSize();
            main.printMessage( " " + len );
            includes = new String[ len - 1 ];            
            
            for( int i = 1 ; i < len ; i++ ) {                                
                includes[ i-1 ] = "**\\" + (String) filterComboBox.getModel().getElementAt( i );                
            }
            
        } else {
            includes = new String[1];
            includes[0] = "**\\" + fileType;
        }                
        
        ds.setBasedir( main.getBuildDirectory() );
        ds.setCaseSensitive( true );
        ds.setIncludes( includes );
        ds.setExcludes( excludes );
        
        ds.scan();
                
        String[] files = ds.getIncludedFiles();
        String[] dirs = ds.getIncludedDirectories();
      
        displayResultTextArea.setText( "Search text: " + srchTxt + '\n' );
        displayResultTextArea.append( "Search filter: " + filter + "\n" );
        displayResultTextArea.append( "-----------------------------------------\n" );
        
        boolean caseSensitive = caseSensitiveCheckBox.isSelected() ? true  : false;
        
        for( int i = 0 ; i < files.length ; i++ ) {
            if( main.hasStringOccurence( caseSensitive, srchTxt, files[i] ) ) {   
                found++;
                displayResultTextArea.append( "\n[Found in: " + files[i] + "]\n" );
                displayResultTextArea.append( main.getStringOccurence( caseSensitive, srchTxt, files[i] ) );
            }            
        }               
        
        displayResultTextArea.append( "\n-----------------------------------------\n" );
        displayResultTextArea.append( "Found in: " + found + " files\n" );
        displayResultTextArea.append( "Searched: " + files.length + " files" );
         
    }
    
}
